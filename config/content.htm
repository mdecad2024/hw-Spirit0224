<h1>About</h1>
<p>國立虎尾科技大學機械設計工程系</p>
<p>National Formosa University</p>
<p>Department of Mechanical Design Engineering</p>
<p>cad2024 電腦輔助設計與實習</p>
<p>課程教材:</p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/Intro_to_Mechatronics.pdf">Intro_to_Mechatronics.pdf</a> (<a href="http://engineering.nyu.edu/mechatronics/Control_Lab/bck/VKapila/Intro2EngLect/">Source</a>)</p>
<p style="padding-left: 30px;"><a href="https://pythontutor.com/"></a><a href="https://link.springer.com/book/10.1007/978-3-031-57148-0">Programming with Python for Engineers</a></p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/nx2306_tutorial_video.7z">NX Tutorial</a></p>
<p style="padding-left: 30px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 30px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入 <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a> Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span class="fui-Text ___vec8h90 fk6fouc f1pbo8a8 f1i3iumi figsok6 fpgzoln f1w7gpdv f6juhto f1mtd64y f1y7q3j9 f2jf649 foxqkq2" data-tid="join-team-code">j19kw75</span></p>
<p>個人倉儲:<a href="https://github.com/mdecad2024/hw-Spirit0224">https://github.com/mdecad2024/hw-Spirit0224</a></p>
<p>個人網站:<a href="https://mdecad2024.github.io/hw-Spirit0224">https://mdecad2024.github.io/hw-Spirit0224</a></p>
<p>其他資訊</p>
<h1>Attendance</h1>
<p>出席 (10%) - 自行舉證評分</p>
<p>自行利用 Github commits 提交記錄評分.</p>
<h1>Week</h1>
<p>*每周上傳內容</p>
<h2>W1</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/dSn6w64QKqg?si=AnTskHUNTZaXXL2l" title="YouTube video player" width="560"></iframe></p>
<p>*試著編輯影片導入字幕</p>
<h2>W2</h2>
<p>1.首先進入codespaces</p>
<p>2.建立一個新的終端機</p>
<p>3.在init_replit裡找到  <span>pip</span><span> </span><span>install</span><span> </span><span>flask</span><span> </span><span>flask_cors</span><span> </span><span>bs4</span><span> </span><span>lxml</span><span> </span><span>pelican</span><span> </span><span>markdown</span><span> </span><span>gevent</span></p>
<p><span>4.在終端機複製上面的程式代碼</span></p>
<p>  執行動態-----python3 main.py</p>
<p>  執行靜態-----python3 main2.py</p>
<p>5.推上到靜態網頁上</p>
<p>    git add .</p>
<p>    git commit -m"新增要推上去的簡介"</p>
<p>    git push</p>
<h2>W3</h2>
<p>上課內容:</p>
<p>Solvespace簡單試用</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/2tOTj-LseVY?si=LQDhUw_v0sUr07QS" title="YouTube video player" width="560"></iframe></p>
<p>Solvespace 建立零件後 import 進入 CoppeliaSim 場景</p>
<p><img alt="" height="315" src="/images/作業.png" width="600"/></p>
<p>1.測試Slovespace以及轉STL還有上傳到Cmd</p>
<h2>W6</h2>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_part2.stl">模型0</a> <!-- 測試題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part4.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/r8UurR8XOkM', // 測試題的影片
        'https://www.youtube.com/embed/KkipAeVs4Sw', // 第一題的影片
    ];
    
    var titles = ['測試題', '第一題']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<p></p>
<p>1.今天在課堂上完成測試繪圖的那題以及第一題</p>
<p>2.因第四跟五周放假所以複習用cmd練習推上STL</p>
<p>3.繼續完成STL到32頁即可</p>
<p></p>
<h2>W7</h2>
<p><img alt="" height="321" src="/images/螢幕擷取畫面 2024-11-13 225659.png" width="572"/></p>
<p>1.運用ZoomIt64在錄影時可以放大</p>
<p>2.下載並嘗試開啟NX檔案匯入</p>
<p>3.分組利用solvespaces畫圖，<a href="https://support.industrysoftware.automation.siemens.com/training/se/en/ST3/pdf/spse01550.pdf">圖檔畫到第32頁</a></p>
<p></p>
<h2>W9</h2>
<p>期中考週</p>
<p>*填自我評量表單</p>
<p>1.檢視自己的上次數</p>
<p>2.檢視自己做的內容</p>
<p>3.檢查網站及倉儲是否連動</p>
<p>4.給自己一個分數</p>
<p>5.簡述自己這九週所作的內容</p>
<p>*四五八週因連假及颱風假所在家自行複習以前上課內容及完成STL零件的繪製</p>
<h2>W10</h2>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_part16.stl">模型10</a> <!-- 第一題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part16.stl">模型11</a> <!-- 第二題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/ScCWTRYUw4U', // 第0題的影片
       'https://www.youtube.com/embed/8dviErbwFEM', // 第1題的影片
    ];
    
    var titles = ['第一題Slovespace','第一題NX']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<p>下載檔案:<a href="/downloads/41223122_part16.stl">/downloads/41223122_part16.stl</a></p>
<p>心得:這次題目跟練習的時候差不多，有到基本的難度。只是肋的倒圓角還不太熟悉，要再多練習才可以。我做法先畫底板再新增圓孔再來做肋</p>
<h2>W11</h2>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_1_06.stl">Model 0</a> <!-- 第一個模型 --> <a href="https://s104.cycu.org/~41223122/41223122_1_07.stl">Model 1</a> <!-- 第二個模型 --> <a href="https://s104.cycu.org/~41223122/41223122_1_01.stl">Model 2</a> <!-- 第三個模型 --> <a href="https://s104.cycu.org/~41223122/41223122_1_02.stl">Model 3</a> <!-- 第四個模型 --> <a href="https://s104.cycu.org/~41223122/41223122_1_03.stl">Model 4</a> <!-- 第五個模型 --> <a href="https://s104.cycu.org/~41223122/41223122_1_04.stl">Model 5</a> <!-- 第六個模型 --> <a href="https://s104.cycu.org/~41223122/41223122_1_05.stl">Model 6</a> <!-- 第七個模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title, stlDownloadUrl) {
    var fileName = stlDownloadUrl.split('/').pop(); // 取得檔案名稱
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color: <input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color 1: <input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color 2: <input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode: <select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition: <select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>Low</option>
                <option>High</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>

        <!-- STL 檔案下載連結 -->
        <div id="downloadLink${index}" style="margin-bottom: 20px;">
            <a href="${stlDownloadUrl}" download>Download STL File: ${fileName}</a> <!-- 修改為英文 -->
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/CTNsdHgW2k4',  // 第1個零件的影片
       'https://www.youtube.com/embed/LtAsBwdUDgo',  // 第二個零件的影片
    ];
    
    var titles = ['Platine Batteur_sldprt', 'Piece métalique gauche_sldprt']; // 題目標題
    var stlDownloads = ['/downloads/41223122_1_06.stl', '/downloads/41223122_1_07.stl']; // STL 文件的下載路徑

    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index], stlDownloads[index]);
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h1>Solvespace Parts</h1>
<p>STL檔下載</p>
<p>Test:<a href="/downloads/41223122_part2.stl">/downloads/41223122_part2.stl</a></p>
<p>Base plate:<a href="/downloads/41223122_part4.stl">/downloads/41223122_part4.stl</a></p>
<p>Bearing block A:<a href="/downloads/41223122_part5.stl">/downloads/41223122_part5.stl</a></p>
<p>Bearing block B:<a href="/downloads/41223122_part6.stl">/downloads/41223122_part6.stl</a></p>
<p>Column base:</p>
<p>Dovetail bracket:<a href="/downloads/41223122_part7.stl">/downloads/41223122_part7.stl</a></p>
<p>Dovetail stop:<a href="/downloads/41223122_part8.stl">/downloads/41223122_part8.stl</a></p>
<p>Gland blank:<a href="/downloads/41223122_part10.stl">/downloads/41223122_part10.stl</a></p>
<p>Gland:<a href="/downloads/41223122_part11.stl">/downloads/41223122_part11.stl</a></p>
<p>Guide plate:<a href="/downloads/41223122_part12.stl">/downloads/41223122_part12.stl</a></p>
<p>Head attachment:<a href="/downloads/41223122_part13.stl">/downloads/41223122_part13.stl</a></p>
<p>Head yoke:<a href="/downloads/41223122_part15.stl">/downloads/41223122_part15.stl</a></p>
<p>Rod support:<a href="/downloads/41223122_part17.stl">/downloads/41223122_part17.stl</a></p>
<h2>part1</h2>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_part2.stl">模型0</a> <!-- 測試題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part4.stl">模型1</a> <!-- 第一題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part5.stl">模型2</a> <!-- 第二題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part6.stl">模型3</a> <!-- 第三題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/r8UurR8XOkM', // 測試題的影片
        'https://www.youtube.com/embed/KkipAeVs4Sw', // 第一題的影片
        'https://www.youtube.com/embed/dSXBk1qFFjs' ,// 第二題的影片
        'https://www.youtube.com/embed/2sHDIOemkiU', // 第三題的影片
    ];
    
    var titles = ['Test', 'Base plate', 'Bearing block A', 'Bearing block B']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>part2</h2>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_part7.stl">模型7</a> <!-- 第五題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part8.stl">模型8</a> <!-- 第六題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part10.stl">模型9</a> <!-- 第七題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part11.stl">模型10</a> <!-- 第八題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part12.stl">模型11</a> <!-- 第九題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/pldDvsu7YGo', // 第五題的影片
       'https://www.youtube.com/embed/iDgyk4YksME', // 第六題的影片
       'https://www.youtube.com/embed/bdLk13Pxz2U', // 第七題的影片
       'https://www.youtube.com/embed/6SZxnl0G2S0', // 第八題的影片
       'https://www.youtube.com/embed/2TU9riGFWH0', // 第九題的影片
    ];
    
    var titles = ['Dovetail bracket','Dovetail stop','Gland blank','Gland','Guide plate']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>part3</h2>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_part13.stl">模型10</a> <!-- 第十題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part15.stl">模型11</a> <!-- 第十一題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part17.stl">模型12</a> <!-- 第十二題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/prFHh0DY2yw', // 第十題的影片
       'https://www.youtube.com/embed/eDEzGbZts3Q', // 第十一題的影片
       'https://www.youtube.com/embed/sgiFuGgebwE', // 第十二題的影片
    ];
    
    var titles = ['Head attachment','Head yoke','Rod support']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h1>HW1</h1>
<p>Homework 1 (10%):</p>
<p style="padding-left: 30px;">利用 Solvespace 與 NX2312 建立 <a href="https://mde.tw/cad2024/content/Parts.html">Parts</a> 頁面中的零件</p>
<p style="padding-left: 30px;">其他<a href="http://229.cycu.org/part_modeling_projects.pdf">零件模擬練習</a></p>
<hr/>
<p>利用 Solvespace 繪製列表中零件的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業一之一</p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<div id="models1"><canvas height="300" id="cv1" style="border: 1px solid;" width="400"></canvas></div>
<div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;"><!-- 調整 margin-bottom --> Model Color:<input id="mdlClr1" onchange="changeOption1('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40"/> Back Color1:<input id="bckClr1_1" onchange="changeOption1('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color"/> Back Color2:<input id="bckClr1_2" onchange="changeOption1('BackgroundColor2',this.value)" type="color"/><br/> Render Mode:<select id="render1" onchange="changeOption1('RenderMode',this.value)">
<option>Flat</option>
<option>Point</option>
<option>Wireframe</option>
<option>Smooth</option>
</select>Definition:<select id="defini1" onchange="changeOption1('Definition',this.value)">
<option>Standard</option>
<option>low</option>
<option>high</option>
</select></div>
<script type="text/javascript">
// PART 1 的變數和函數
var viewer1;

function getOptions1(){
    var mc = document.getElementById("mdlClr1").value;
    var bc1 = document.getElementById("bckClr1_1").value;
    var bc2 = document.getElementById("bckClr1_2").value;
    var ren = document.getElementById("render1").value;
    var def = document.getElementById("defini1").value;
    return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
}

function readSTLfile1(opt, canvasId){
    var canvas = document.getElementById(canvasId);
    viewer1 = new JSC3D.Viewer(canvas);
    viewer1.setParameter('SceneUrl', opt.SceneUrl);
    viewer1.setParameter('InitRotationX', 0);
    viewer1.setParameter('InitRotationY', 0);
    viewer1.setParameter('InitRotationZ', 0);
    viewer1.setParameter('ModelColor', opt.ModelColor);
    viewer1.setParameter('BackgroundColor1', opt.BackgroundColor1);
    viewer1.setParameter('BackgroundColor2', opt.BackgroundColor2);
    viewer1.setParameter('RenderMode', opt.RenderMode);
    viewer1.setParameter('Definition', opt.Definition);
    viewer1.init();
    viewer1.update();
}

function changeOption1(strOpt, strValue){
    console.log("PART 1 change " + strOpt + " to " + strValue);
    viewer1.setParameter(strOpt, strValue);
    viewer1.init();
    viewer1.update();
}

function openByGet1(){
    var url = "https://s104.cycu.org/~41223122/41223122_part2.stl";
    var opt = getOptions1();
    opt.SceneUrl = url;
    readSTLfile1(opt, 'cv1');
}

openByGet1();
</script>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業一之二</p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<div id="models2"><canvas height="300" id="cv2" style="border: 1px solid;" width="400"></canvas></div>
<div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;"><!-- 調整 margin-bottom --> Model Color:<input id="mdlClr2" onchange="changeOption2('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40"/> <!-- 初始綠色 --> Back Color1:<input id="bckClr2_1" onchange="changeOption2('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color"/> Back Color2:<input id="bckClr2_2" onchange="changeOption2('BackgroundColor2',this.value)" type="color"/><br/> Render Mode:<select id="render2" onchange="changeOption2('RenderMode',this.value)">
<option>Flat</option>
<option>Point</option>
<option>Wireframe</option>
<option>Smooth</option>
</select>Definition:<select id="defini2" onchange="changeOption2('Definition',this.value)">
<option>Standard</option>
<option>low</option>
<option>high</option>
</select></div>
<script type="text/javascript">
// PART 2 的變數和函數
var viewer2;

function getOptions2(){
    var mc = document.getElementById("mdlClr2").value;
    var bc1 = document.getElementById("bckClr2_1").value;
    var bc2 = document.getElementById("bckClr2_2").value;
    var ren = document.getElementById("render2").value;
    var def = document.getElementById("defini2").value;
    return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
}

function readSTLfile2(opt, canvasId){
    var canvas = document.getElementById(canvasId);
    viewer2 = new JSC3D.Viewer(canvas);
    viewer2.setParameter('SceneUrl', opt.SceneUrl);
    viewer2.setParameter('InitRotationX', 0);
    viewer2.setParameter('InitRotationY', 0);
    viewer2.setParameter('InitRotationZ', 0);
    viewer2.setParameter('ModelColor', opt.ModelColor);
    viewer2.setParameter('BackgroundColor1', opt.BackgroundColor1);
    viewer2.setParameter('BackgroundColor2', opt.BackgroundColor2);
    viewer2.setParameter('RenderMode', opt.RenderMode);
    viewer2.setParameter('Definition', opt.Definition);
    viewer2.init();
    viewer2.update();
}

function changeOption2(strOpt, strValue){
    console.log("PART 2 change " + strOpt + " to " + strValue);
    viewer2.setParameter(strOpt, strValue);
    viewer2.init();
    viewer2.update();
}

function openByGet2(){
    var url = "https://s104.cycu.org/~41223122/41223122_part4.stl";
    var opt = getOptions2();
    opt.SceneUrl = url;
    readSTLfile2(opt, 'cv2');
}

openByGet2();
</script>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/KkipAeVs4Sw?si=u2KKkTL81xjuBx5r" title="YouTube video player" width="560"></iframe></p>
<p>檔案:<a href="/downloads/41223122_part4.stl">/downloads/41223122_part4.stl</a></p>
<p>利用 NX2312 繪製列表中零件的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業一之三</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業一之四</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p style="padding-left: 30px;">......</p>
<p>HW1 執行心得:</p>
<p style="padding-left: 30px;">......</p>
<p>HW1 自評分數:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 HW1 自評分數輸入 cad2024 自評表單中.</p>
<h2>HW1_Exam</h2>
<p>從<a href="http://229.cycu.org/part_modeling_projects.pdf">零件模擬練習</a>中選出零件, 隨堂進行考試.</p>
<p>零件考試題目以 Solvespace 繪圖操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p>零件考試題目以 NX2312 繪圖操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<h1>HW2</h1>
<p>Homework 2 (10%):</p>
<p style="padding-left: 30px;">利用 Solvespace 與 NX 建立 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 組立件</p>
<hr/>
<p>利用 Solvespace 繪製 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 組立件的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業二之一</p>
<p style="padding-left: 30px;">所完成的零組件檔案下載</p>
<p>利用 NX2312 繪製 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 組立件的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業二之二</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p>HW2 執行心得:</p>
<p style="padding-left: 30px;">......</p>
<p>HW2 自評分數:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 HW2 自評分數輸入 cad2024 自評表單中.</p>
<h2>HW2_Exam</h2>
<p>與 HW2 內容相近的組立件題目, 隨堂進行考試.</p>
<p>零件與組立件考試題目以 Solvespace 繪圖操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的零件與組立件檔案下載</p>
<p>零件與組立件考試題目以 NX 繪圖操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的零件與組立件檔案下載</p>
<h1>HW3</h1>
<p>Homework 3 (20%):</p>
<p style="padding-left: 30px;">建立 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 控制系統設計模擬場景</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/Balance_On_Wheels">https://github.com/mdecycu/Balance_On_Wheels</a></p>
<p style="padding-left: 30px;"><img alt="" height="217" src="https://mde.tw/cad2024/images/balance_on_wheels.png" width="400"/></p>
<p style="padding-left: 30px;"><img alt="" height="217" src="https://mde.tw/cad2024/images/Balance_on_wheels_scene.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cad2024/downloads/Balance_on_wheels_nx2312.7z">Balance_on_wheels_nx2312.7z</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cad2024/downloads/Balance_on_Wheel_scene.7z">Balance_on_Wheel_scene.7z</a></p>
<h2>HW3_Exam</h2>
<p>與 HW3 內容相近的模擬場景題目, 隨堂進行考試.</p>
<p>建立模擬場景操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的模擬場景與控制程式檔案下載</p>
<hr/>
<p>利用 CoppeliaSim 建立 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 控制系統設計模擬場景的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業三</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的場景與控制程式檔案下載</p>
<p>HW3 執行心得:</p>
<p style="padding-left: 30px;">......</p>
<p>HW3 自評分數:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 HW3 自評分數輸入 cad2024 自評表單中.</p>
<h1>HW4</h1>
<p>Homework 4 (20%):</p>
<p style="padding-left: 30px;">建立 <a href="https://mde.tw/cad2024/content/Quadruped.html">Dingo 機器狗</a>控制系統設計模擬場景</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/DingoQuadruped">https://github.com/mdecycu/DingoQuadruped</a></p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/DINGO_QUADRUPED_CAD.7z">DINGO_QUADRUPED_CAD.7z</a></p>
<p style="padding-left: 30px;"><img alt="" height="217" src="https://mde.tw/cad2024/images/dingo.png" width="400"/></p>
<hr/>
<p>利用 CoppeliaSim 建立 <a href="https://mde.tw/cad2024/content/Quadruped.html">Dingo 機器狗</a>控制系統設計模擬場景的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業四</p>
<p style="padding-left: 30px;">所完成的場景與控制程式檔案下載</p>
<p>HW4 執行心得:</p>
<p style="padding-left: 30px;">....</p>
<p>HW4 自評分數:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 HW4 自評分數輸入 cad2024 自評表單中.</p>
<h2>HW4_Exam</h2>
<p>與 HW4 內容相近的模擬場景題目, 隨堂進行考試.</p>
<p>建立模擬場景操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的模擬場景與控制程式檔案下載</p>
<h1>Check</h1>
<p>此網頁用來檢查作業</p>
<h2>w1</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/dSn6w64QKqg?si=AnTskHUNTZaXXL2l" title="YouTube video player" width="560"></iframe></p>
<p>*試著編輯影片導入字幕</p>
<h2>w2</h2>
<p>1.首先進入codespaces</p>
<p>2.建立一個新的終端機</p>
<p>3.在init_replit裡找到  <span>pip</span><span> </span><span>install</span><span> </span><span>flask</span><span> </span><span>flask_cors</span><span> </span><span>bs4</span><span> </span><span>lxml</span><span> </span><span>pelican</span><span> </span><span>markdown</span><span> </span><span>gevent</span></p>
<p><span>4.在終端機複製上面的程式代碼</span></p>
<p>  執行動態-----python3 main.py</p>
<p>  執行靜態-----python3 main2.py</p>
<p>5.推上到靜態網頁上</p>
<p>    git add .</p>
<p>    git commit -m"新增要推上去的簡介"</p>
<p>    git push</p>
<h2>w3</h2>
<p>上課內容:</p>
<p>Solvespace簡單試用</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/2tOTj-LseVY?si=LQDhUw_v0sUr07QS" title="YouTube video player" width="560"></iframe></p>
<p>Solvespace 建立零件後 import 進入 CoppeliaSim 場景</p>
<p><img alt="" height="315" src="/images/作業.png" width="600"/></p>
<p>1.測試Slovespace以及轉STL還有上傳到Cmd</p>
<h2>w7</h2>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_part2.stl">模型0</a> <!-- 測試題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part4.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/r8UurR8XOkM', // 測試題的影片
        'https://www.youtube.com/embed/KkipAeVs4Sw', // 第一題的影片
    ];
    
    var titles = ['Test', 'Base plate']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<p>Test:<a href="/downloads/41223122_part2.stl">/downloads/41223122_part2.stl</a></p>
<p>Base plate:<a href="/downloads/41223122_part4.stl">/downloads/41223122_part4.stl</a></p>
<p></p>
<p><img alt="" height="321" src="/images/螢幕擷取畫面 2024-11-13 225659.png" width="572"/></p>
<p>1.運用ZoomIt64在錄影時可以放大</p>
<p>2.下載並嘗試開啟NX檔案匯入</p>
<p>3.分組利用solvespaces畫圖，<a href="https://support.industrysoftware.automation.siemens.com/training/se/en/ST3/pdf/spse01550.pdf">圖檔畫到第32頁</a></p>
<p></p>
<p>*其餘的零件檔在Parts裡面</p>
<h3>solvespace Parts</h3>
<p>STL檔下載</p>
<p>Test:<a href="/downloads/41223122_part2.stl">/downloads/41223122_part2.stl</a></p>
<p>Base plate:<a href="/downloads/41223122_part4.stl">/downloads/41223122_part4.stl</a></p>
<p>Bearing block A:<a href="/downloads/41223122_part5.stl">/downloads/41223122_part5.stl</a></p>
<p>Bearing block B:<a href="/downloads/41223122_part6.stl">/downloads/41223122_part6.stl</a></p>
<p>Column base:</p>
<p>Dovetail bracket:<a href="/downloads/41223122_part7.stl">/downloads/41223122_part7.stl</a></p>
<p>Dovetail stop:<a href="/downloads/41223122_part8.stl">/downloads/41223122_part8.stl</a></p>
<p>Gland blank:<a href="/downloads/41223122_part10.stl">/downloads/41223122_part10.stl</a></p>
<p>Gland:<a href="/downloads/41223122_part11.stl">/downloads/41223122_part11.stl</a></p>
<p>Guide plate:<a href="/downloads/41223122_part12.stl">/downloads/41223122_part12.stl</a></p>
<p>Head attachment:<a href="/downloads/41223122_part13.stl">/downloads/41223122_part13.stl</a></p>
<p>Head yoke:<a href="/downloads/41223122_part15.stl">/downloads/41223122_part15.stl</a></p>
<p>Rod support:<a href="/downloads/41223122_part17.stl">/downloads/41223122_part17.stl</a></p>
<h3>Part1</h3>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_part2.stl">模型0</a> <!-- 測試題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part4.stl">模型1</a> <!-- 第一題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part5.stl">模型2</a> <!-- 第二題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part6.stl">模型3</a> <!-- 第三題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/r8UurR8XOkM', // 測試題的影片
        'https://www.youtube.com/embed/KkipAeVs4Sw', // 第一題的影片
        'https://www.youtube.com/embed/dSXBk1qFFjs' ,// 第二題的影片
        'https://www.youtube.com/embed/2sHDIOemkiU', // 第三題的影片
    ];
    
    var titles = ['Test', 'Base plate', 'Bearing block A', 'Bearing block B']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h3>Part2</h3>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_part7.stl">模型7</a> <!-- 第五題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part8.stl">模型8</a> <!-- 第六題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part10.stl">模型9</a> <!-- 第七題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part11.stl">模型10</a> <!-- 第八題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part12.stl">模型11</a> <!-- 第九題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/pldDvsu7YGo', // 第五題的影片
       'https://www.youtube.com/embed/iDgyk4YksME', // 第六題的影片
       'https://www.youtube.com/embed/bdLk13Pxz2U', // 第七題的影片
       'https://www.youtube.com/embed/6SZxnl0G2S0', // 第八題的影片
       'https://www.youtube.com/embed/2TU9riGFWH0', // 第九題的影片
    ];
    
    var titles = ['Dovetail bracket','Dovetail stop','Gland blank','Gland','Guide plate']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h3>Part3</h3>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_part13.stl">模型10</a> <!-- 第十題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part15.stl">模型11</a> <!-- 第十一題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part17.stl">模型12</a> <!-- 第十二題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/prFHh0DY2yw', // 第十題的影片
       'https://www.youtube.com/embed/eDEzGbZts3Q', // 第十一題的影片
       'https://www.youtube.com/embed/sgiFuGgebwE', // 第十二題的影片
    ];
    
    var titles = ['Head attachment','Head yoke','Rod support']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>w9</h2>
<p>期中考週</p>
<p>*填自我評量表單</p>
<p>1.檢視自己的上次數</p>
<p>2.檢視自己做的內容</p>
<p>3.檢查網站及倉儲是否連動</p>
<p>4.給自己一個分數</p>
<p>5.簡述自己這九週所作的內容</p>
<p>*四五八週因連假及颱風假所在家自行複習以前上課內容及完成STL零件的繪製</p>
<h2>w10</h2>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_part16.stl">模型10</a> <!-- 第一題的模型 --> <a href="https://s104.cycu.org/~41223122/41223122_part16.stl">模型11</a> <!-- 第二題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/ScCWTRYUw4U', // 第0題的影片
       'https://www.youtube.com/embed/8dviErbwFEM', // 第1題的影片
    ];
    
    var titles = ['第一題Slovespace','第一題NX']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<p>下載檔案:<a href="/downloads/41223122_part16.stl">/downloads/41223122_part16.stl</a></p>
<p>心得:這次題目跟練習的時候差不多，有到基本的難度。只是肋的倒圓角還不太熟悉，要再多練習才可以。我做法先畫底板再新增圓孔再來做肋</p>
<h2>w11_hw</h2>
<p>組員影片連結:<a href="https://mdecad2024.github.io/hw-otakuyoyo/content/w11_hw.html">41223149</a>  <a href="https://mdecad2024.github.io/hw-joeisme1208/content/w11_hw.html">41223130</a></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_1_06.stl">Model 0</a> <!-- 第一個模型 --> <a href="https://s104.cycu.org/~41223122/41223122_1_07.stl">Model 1</a> <!-- 第二個模型 --> <a href="https://s104.cycu.org/~41223122/41223122_1_01.stl">Model 2</a> <!-- 第三個模型 --> <a href="https://s104.cycu.org/~41223122/41223122_1_02.stl">Model 3</a> <!-- 第四個模型 --> <a href="https://s104.cycu.org/~41223122/41223122_1_03.stl">Model 4</a> <!-- 第五個模型 --> <a href="https://s104.cycu.org/~41223122/41223122_1_04.stl">Model 5</a> <!-- 第六個模型 --> <a href="https://s104.cycu.org/~41223122/41223122_1_05.stl">Model 6</a> <!-- 第七個模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title, stlDownloadUrl) {
    var fileName = stlDownloadUrl.split('/').pop(); // 取得檔案名稱
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color: <input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color 1: <input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color 2: <input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode: <select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition: <select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>Low</option>
                <option>High</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>

        <!-- STL 檔案下載連結 -->
        <div id="downloadLink${index}" style="margin-bottom: 20px;">
            <a href="${stlDownloadUrl}" download>Download STL File: ${fileName}</a> <!-- 修改為英文 -->
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/CTNsdHgW2k4',  // 第1個零件的影片
       'https://www.youtube.com/embed/LtAsBwdUDgo',  // 第二個零件的影片
    ];
    
    var titles = ['Platine Batteur_sldprt', 'Piece métalique gauche_sldprt']; // 題目標題
    var stlDownloads = ['/downloads/41223122_1_06.stl', '/downloads/41223122_1_07.stl']; // STL 文件的下載路徑

    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index], stlDownloads[index]);
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>w12_ch</h2>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223122/41223122_1_00.stl">Model 0</a> <!-- 第一個模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title, stlDownloadUrl) {
    var fileName = stlDownloadUrl.split('/').pop(); // 取得檔案名稱
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color: <input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color 1: <input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color 2: <input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode: <select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition: <select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>Low</option>
                <option>High</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>

        <!-- STL 檔案下載連結 -->
        <div id="downloadLink${index}" style="margin-bottom: 20px;">
            <a href="${stlDownloadUrl}" download>Download STL File: ${fileName}</a> <!-- 修改為英文 -->
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
       'https://www.youtube.com/embed/SFi8kDBJ94E',  // 第1個零件的影片
    ];
    
    var titles = ['組裝']; // 題目標題
    var stlDownloads = ['/downloads/41223122_1_00.stl']; // STL 文件的下載路徑

    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index], stlDownloads[index]);
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>w13</h2>
<h4 class="style-scope ytd-watch-metadata"><yt-formatted-string class="style-scope ytd-watch-metadata" force-default-style="">coppeliaSim轉動</yt-formatted-string></h4>
<p></p>
<p><span> </span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/GhT3ZQVmnP0?si=Sau2atIOA7pIfFmD" title="YouTube video player" width="560"></iframe></p>
<h2>w14</h2>
<p><em><strong>1.</strong></em><span>利用 STL 檔案</span><span>建立 CoppeliaSim 模擬場景</span><span>的過程：</span></p>
<p><span>老師的:<a href="/downloads/part.ttt">/downloads/part.ttt</a></span></p>
<p><span>未做的:<a href="/downloads/41223122_assembly.stl">/downloads/41223122_assembly.stl</a></span></p>
<p><span>完成:<a href="/downloads/41223122.ttt">/downloads/41223122.ttt</a>(此檔案有兩部分未解決)</span></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/1waC6GIbHS4?si=NfHLopBunbyBIz8s" title="YouTube video player" width="560"></iframe></p>
<p>第二部影片為解決問題但有兩個問題未解決</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/iarcT2o-jFs?si=zT7OV5QftcZQsKyf" title="YouTube video player" width="560"></iframe></p><h1>Final Report</h1>
<p>期末口頭與書面專題報告 (30%)</p>
<p>期末口頭專題報告影片:</p>
<p style="padding-left: 30px;">......</p>
<p>期末書面專題報告檔案 (pdf):</p>
<p style="padding-left: 30px;">......</p>
<p>電腦輔助設計與實習課程總結心得:</p>
<p style="padding-left: 30px;">......</p>
<p>期末報告自評成績:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 Final Report 自評分數輸入 cad2024 自評表單中.</p>